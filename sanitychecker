#!/usr/bin/env python3

"""sanitychecker - Perform a number of sanity checks on a directory of assets.

Author:
    Sam Gibson <samolivergibson@gmail.com>
"""

import argparse
from os.path import exists

import sanity.config
import sanity.module

DESCRIPTION = "Perform a number of quick sanity checks on a directory of assets"

def exit_app(code, msg=""):
    print(msg)
    raise SystemExit(code)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=DESCRIPTION)
    parser.add_argument("directory", type=str,
                        help="The directory of assets to check.")
    parser.add_argument("-c", "--config", type=str, default="default-config.yml",
                        help="The YAML config file to use for this check. Defaults"
                        " to './default-config.yml'")
    args = parser.parse_args()

    # check to see if specified asset directory exists
    if not exists(args.directory):
        exit_app(1, f"ERROR: Specified assets directory '{args.directory}' did not exist")
    
    # try to load the config file given
    conf = None
    try:
        conf = sanity.config.parse_config(args.config)
    except sanity.config.ConfigError as exc:
        exit_app(1, f"ERROR: Could not load config, {str(exc)}")

    # try to create a sanity checker context
    sanity_ctx = None
    try:
        sanity_ctx = sanity.CheckerContext(conf, args.directory)
    except sanity.ContextCreationError as exc:
        exit_app(1, f"ERROR: Unable to create context, {str(exc)}")

    sanity.check(sanity_ctx)
